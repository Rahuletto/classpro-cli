import { blue, green, red, yellow } from "colorette";
import { createClient } from '@supabase/supabase-js';

export async function setupDbCommand() {
    try {
        console.log(blue('üóÑÔ∏è Setting up database tables and cron jobs...'));

        const supabaseUrl = process.env.SUPABASE_URL;
        const supabaseKey = process.env.SUPABASE_KEY;

        if (!supabaseUrl || !supabaseKey) {
            console.error(red('‚ùå Missing Supabase credentials!'));
            console.error(red('Please run "classpro init" first to set up environment variables.'));
            process.exit(1);
        }

        const supabase = createClient(supabaseUrl, supabaseKey);

        // Create tables
        await supabase.rpc('setup_tables', {
            query: `
                CREATE TABLE IF NOT EXISTS public.goscrape (
                    "regNumber" text NOT NULL,
                    "user" text NULL,
                    timetable text NULL,
                    courses text NULL,
                    attendance text NULL,
                    marks text NULL,
                    "lastUpdated" numeric NULL,
                    token text NOT NULL,
                    ophour text NULL DEFAULT ''::text,
                    CONSTRAINT goscrape_pkey PRIMARY KEY ("regNumber", token),
                    CONSTRAINT goscrape_regNumber_key UNIQUE ("regNumber")
                );

                CREATE TABLE IF NOT EXISTS public.gocal (
                    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
                    date text NULL,
                    month text NULL,
                    day text NULL,
                    "order" text NULL,
                    event text NULL,
                    created_at numeric NULL
                );
            `
        });

        // Check for pg_cron extension
        const { data: extension, error: extensionError } = await supabase
            .from('pg_extension')
            .select('*')
            .eq('extname', 'pg_cron')
            .single();

        if (extensionError || !extension) {
            console.error(red('‚ùå The pg_cron extension is not installed in your database!'));
            console.error(red('Please install the pg_cron extension before setting up cron jobs.'));
            process.exit(1);
        }

        // Setup cleanup function and cron job
        await supabase.rpc('setup_cron_jobs', {
            query: `
                -- Create cleanup function for goscrape
                CREATE OR REPLACE FUNCTION cleanup_old_data()
                RETURNS void AS $$
                BEGIN
                    UPDATE goscrape
                    SET "user" = NULL, timetable = NULL, attendance = NULL, marks = NULL, courses = NULL
                    WHERE "lastUpdated" < (EXTRACT(EPOCH FROM NOW()) * 1000) - (12 * 60 * 60 * 1000);
                END;
                $$ LANGUAGE plpgsql SECURITY INVOKER;

                -- Create cleanup function for gocal
                CREATE OR REPLACE FUNCTION delete_from_gocal()
                RETURNS void AS $$
                BEGIN
                    DELETE FROM gocal;
                END;
                $$ LANGUAGE plpgsql SECURITY INVOKER;

                -- Schedule cron jobs
                SELECT cron.schedule(
                    'cleanup-goscrape',
                    '0 */12 * * *',
                    'SELECT cleanup_old_data()'
                );

                SELECT cron.schedule(
                    'cleanup-gocal',
                    '0 0 * * *',
                    'SELECT delete_from_gocal()'
                );
            `
        });

        console.log(green('‚úÖ Database tables and cron jobs set up successfully!'));
        console.log(blue('‚ÑπÔ∏è Configured cron jobs:'));
        console.log(yellow('- Cleanup goscrape data: Every 12 hours'));
        console.log(yellow('- Cleanup calendar events: Daily at midnight'));
    } catch (error) {
        console.error(red('‚ùå Error setting up database and cron jobs:'), error);
        process.exit(1);
    }
}